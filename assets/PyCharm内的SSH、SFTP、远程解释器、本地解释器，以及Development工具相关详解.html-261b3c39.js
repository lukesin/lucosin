import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as e,f as t}from"./app-924b25df.js";const n="/assets/image-20230604191035329-5294e914.png",s="/assets/image-20230604191515260-822cb2d4.png",o="/assets/image-20230604191532264-16c3aa8b.png",l="/assets/image-20230604191536739-84f878b4.png",g="/assets/image-20230604193218051-4bd0c77c.png",r="/assets/image-20230604193339547-7478e3d8.png",p="/assets/image-20230604193448177-9f1a6ddb.png",c="/assets/image-20230604193527200-9b96c0c8.png",m="/assets/image-20230604193548595-138ca009.png",d="/assets/image-20230604193940553-5b413005.png",_="/assets/image-20230604194003986-cde2ac1b.png",f="/assets/image-20230604194125299-0ebcd977.png",h="/assets/image-20230604194157275-66a7574c.png",S="/assets/image-20230604194223536-9b1ee7e6.png",u="/assets/image-20230604194515203-d3842166.png",b="/assets/image-20230604194630249-442b62b5.png",x="/assets/image-20230604194656951-f9533a86.png",y="/assets/image-20230604194859173-3279086c.png",P="/assets/image-20230604194947110-c6bf1c3a.png",v="/assets/image-20230604151901645-0e09ef92.png",T="/assets/image-20230604200102536-3a39700c.png",F={},H=t(`<h1 id="pycharm的development相关工具详解" tabindex="-1"><a class="header-anchor" href="#pycharm的development相关工具详解" aria-hidden="true">#</a> PyCharm的Development相关工具详解</h1><h3 id="_1-ssh、sftp、remote-host、remote-interpreter、local-interpreter-关系详解" tabindex="-1"><a class="header-anchor" href="#_1-ssh、sftp、remote-host、remote-interpreter、local-interpreter-关系详解" aria-hidden="true">#</a> 1.SSH、SFTP、Remote Host、Remote interpreter、Local interpreter 关系详解</h3><div class="language-mermaid line-numbers-mode" data-ext="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> TB<span class="token punctuation">;</span>
a1<span class="token text string">((SSH))</span><span class="token arrow operator">===</span>a2<span class="token text string">((SFTP))</span>
a2<span class="token text string">((SFTP))</span><span class="token arrow operator">===</span>a4<span class="token text string">((Remote \\n Host))</span>
a3<span class="token text string">((Remote \\n interpreter))</span>.-a2<span class="token text string">((SFTP))</span>
a1<span class="token text string">((SSH))</span><span class="token arrow operator">===</span>a3<span class="token text string">((Remote \\n interpreter))</span>
b1<span class="token text string">((Local \\n interpreter))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-development相关工具详解" tabindex="-1"><a class="header-anchor" href="#_2-development相关工具详解" aria-hidden="true">#</a> 2.Development相关工具详解</h3><figure><img src="`+n+'" alt="image-20230604191035329" tabindex="0" loading="lazy"><figcaption>image-20230604191035329</figcaption></figure><p>红框从上到下依次是：</p><ul><li>上传项目文件到当前SFTP(或首选别的SFTP)/从当前SFTP(或首选别的SFTP)下载项目文件</li><li>与当前SFTP比较文件不同/(或首选别的SFTP)</li><li>SFTP设置/Development设置</li><li>打开Remote Host边栏</li></ul><p>其中，Configuration是设置SFTP的地方，我们主要关注这个，以及通过右下角interpreter点开的解释器设置</p><figure><img src="'+s+'" alt="image-20230604191515260" tabindex="0" loading="lazy"><figcaption>image-20230604191515260</figcaption></figure><figure><img src="'+o+'" alt="image-20230604191532264" tabindex="0" loading="lazy"><figcaption>image-20230604191532264</figcaption></figure><figure><img src="'+l+'" alt="image-20230604191536739" tabindex="0" loading="lazy"><figcaption>image-20230604191536739</figcaption></figure><p>可以看出，这二者布局、功能类似</p><h3 id="_3-如何设置简洁明了的sftp与远程解释器-如何优雅地使用remote-host功能" tabindex="-1"><a class="header-anchor" href="#_3-如何设置简洁明了的sftp与远程解释器-如何优雅地使用remote-host功能" aria-hidden="true">#</a> 3.如何设置简洁明了的SFTP与远程解释器？如何优雅地使用Remote Host功能？</h3><p><strong>目前部分同学在使用PyCharm时主要纠结的点在于：</strong></p><ul><li>在创建远程解释器时自动创建名称为&quot;user@ip:port (x)&quot;的SFTP配置副本，长此以往根本分不清楚，使用起来非常不便</li><li>Remote Host不知道选哪个SFTP，且Remote Host中直接以根目录“/”作为默认目录，需要反复点选至自己的主目录，使用困难</li></ul><p><strong>解决办法：在创建远程解释器后，对远程解释器自动新建的SFTP配置进行重命名</strong></p><ol><li><p>手动配置SSH：</p><ol><li>Tools =&gt; Development =&gt; Configuration</li><li>左上角&quot;+&quot;号 =&gt; 新建SFTP 填写Remote Host所需SFTP的名称，方便自己辨别即可</li><li><img src="'+g+'" alt="image-20230604193218051" tabindex="0" loading="lazy"><figcaption>image-20230604193218051</figcaption></li><li>点选SSH configuration旁边的三个点，配置SSH</li><li><img src="'+r+'" alt="image-20230604193339547" tabindex="0" loading="lazy"><figcaption>image-20230604193339547</figcaption></li><li>左上角&quot;+&quot;号 =&gt; 新建SSH =&gt; 填写IP地址、端口号、用户名、密码(可以勾选保存密码)</li><li>点击Test Connection测试成功</li><li><img src="'+p+'" alt="image-20230604193448177" tabindex="0" loading="lazy"><figcaption>image-20230604193448177</figcaption></li><li>点击Rename为手动创建的SSH设置容易辨别的名称</li><li><img src="'+c+'" alt="image-20230604193527200" tabindex="0" loading="lazy"><figcaption>image-20230604193527200</figcaption></li><li><img src="'+m+'" alt="image-20230604193548595" tabindex="0" loading="lazy"><figcaption>image-20230604193548595</figcaption></li></ol></li><li><p>新建远程解释器，并为因此自动创建的SFTP配置改名</p><ol><li>在Python Interpreter界面点击加号，弹出新建窗口，选择On SSH</li><li><img src="'+d+'" alt="image-20230604193940553" tabindex="0" loading="lazy"><figcaption>image-20230604193940553</figcaption></li><li>选择Existing，并选择刚才手动创建的SSH</li><li><img src="'+_+'" alt="image-20230604194003986" tabindex="0" loading="lazy"><figcaption>image-20230604194003986</figcaption></li><li>填写相关配置</li><li><img src="'+f+'" alt="image-20230604194125299" tabindex="0" loading="lazy"><figcaption>image-20230604194125299</figcaption></li><li><strong>注意： Sync folders必须选对，否则代码无法正常运行和同步！</strong></li><li><img src="'+h+'" alt="image-20230604194157275" tabindex="0" loading="lazy"><figcaption>image-20230604194157275</figcaption></li><li><img src="'+S+'" alt="image-20230604194223536" tabindex="0" loading="lazy"><figcaption>image-20230604194223536</figcaption></li><li>新建完毕后，新建了一个名字巨长的Python远程解释器，和一个与刚才手动创建的SSH同名的SFTP配置</li><li><img src="'+u+'" alt="image-20230604194515203" tabindex="0" loading="lazy"><figcaption>image-20230604194515203</figcaption></li><li>先修改与刚才手动创建的SSH同名的SFTP配置的名称，别的都不要改</li><li>Tools =&gt; Development =&gt; Configuration =&gt; 选中后右击 =&gt; Rename</li><li><img src="'+b+'" alt="image-20230604194630249" tabindex="0" loading="lazy"><figcaption>image-20230604194630249</figcaption></li><li><img src="'+x+'" alt="image-20230604194656951" tabindex="0" loading="lazy"><figcaption>image-20230604194656951</figcaption></li><li>这时发现刚才的Remote Host自动换成刚才改名的那个了，我们在下拉菜单手动选择之前手动创建的SFTP配置</li><li><img src="'+y+'" alt="image-20230604194859173" tabindex="0" loading="lazy"><figcaption>image-20230604194859173</figcaption></li><li>发现目录正常了</li><li>修改远程解释器名称即可</li><li><img src="'+P+'" alt="image-20230604194947110" tabindex="0" loading="lazy"><figcaption>image-20230604194947110</figcaption></li></ol></li></ol><h3 id="附录1-由于超时等原因导致pycharm无法识别远程解释器内所安装的包-或新装的包无法识别的" tabindex="-1"><a class="header-anchor" href="#附录1-由于超时等原因导致pycharm无法识别远程解释器内所安装的包-或新装的包无法识别的" aria-hidden="true">#</a> 附录1：由于超时等原因导致PyCharm无法识别远程解释器内所安装的包/或新装的包无法识别的 =&gt;</h3><figure><img src="'+v+'" alt="image-20230604151901645" tabindex="0" loading="lazy"><figcaption>image-20230604151901645</figcaption></figure><p>右下角Interpreter重新点击当前解释器即可重建当前远程解释器的本地缓存(</p><h3 id="附录2-pycharm一直卡在closing-project环节" tabindex="-1"><a class="header-anchor" href="#附录2-pycharm一直卡在closing-project环节" aria-hidden="true">#</a> 附录2：PyCharm一直卡在Closing Project环节</h3><p>File =&gt; Invalidate Caches 直接点确定，重启即可（仅对当前项目有效）</p><figure><img src="'+T+'" alt="image-20230604200102536" tabindex="0" loading="lazy"><figcaption>image-20230604200102536</figcaption></figure>',23),z=[H];function k(R,C){return a(),e("div",null,z)}const w=i(F,[["render",k],["__file","PyCharm内的SSH、SFTP、远程解释器、本地解释器，以及Development工具相关详解.html.vue"]]);export{w as default};
