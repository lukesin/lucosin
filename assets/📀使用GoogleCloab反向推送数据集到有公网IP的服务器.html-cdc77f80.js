import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as e,f as n}from"./app-924b25df.js";const i="/assets/image-20220728140719858-d9f57da0.png",t="/assets/image-20220728140751831-b506011a.png",l={},o=n('<h1 id="情景描述" tabindex="-1"><a class="header-anchor" href="#情景描述" aria-hidden="true">#</a> 情景描述</h1><p>部分数据集会提供一个网站，直接去下载就可以，因为http代理的存在，即便是网络环境较为特殊，也比较容易克服；但部分数据集会以ftp的形式提供，挂代理也是没有用的，这就给国内特殊网络环境下的数据集获取造成了很大困难，在这种情况下，可以使用免费的GoogleColab服务当做跳板，曲线救国。</p><hr><h1 id="基础需求" tabindex="-1"><a class="header-anchor" href="#基础需求" aria-hidden="true">#</a> 基础需求</h1><p>在使用这个方法之前，请先阅读以下必备的条件：</p><ul><li><p>有良好的网络条件，可以保持和Google的稳定连接（此外还需要一个正常状态下的Google账号）</p></li><li><p>所需要推送到的目标服务器具有ipv4公网地址，且剩余空间充足</p></li><li><p>确保在12h之内能完成下载和推送（主要速度取决于数据集提供方的上行带宽），超时将会被回收</p></li><li><p>所需要下载的数据集小于Colab所提供的ECS的可用存储空间（通常在50GB左右）</p><figure><img src="'+i+`" alt="image-20220728140719858" tabindex="0" loading="lazy"><figcaption>image-20220728140719858</figcaption></figure></li><li><p>PS：如果数据集过大，可以考虑租赁国外的ECS，带宽可能会低一点，不过具体原理一致。</p></li></ul><hr><h1 id="步骤1-下载数据集至colab" tabindex="-1"><a class="header-anchor" href="#步骤1-下载数据集至colab" aria-hidden="true">#</a> 步骤1：下载数据集至Colab</h1><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># prepare requirements</span>
<span class="token function">import</span> os
from google.colab <span class="token function">import</span> drive
drive.mount<span class="token punctuation">(</span><span class="token string">&#39;/content/drive&#39;</span><span class="token punctuation">)</span>
<span class="token assign-left variable">path</span><span class="token operator">=</span><span class="token string">&quot;/content/drive/MyDrive&quot;</span>
os.chdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
os.listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token comment"># 这段代码是挂载GoogleDrive所使用，如若数据集过大，或不需要存储到GoogleDrive，可以忽略</span>

<span class="token comment"># 通过wget方式下载数据集</span>
<span class="token operator">!</span>wget ftp://user:pswd@ftpserver/filename.tar.gz
<span class="token operator">!</span>ls
<span class="token comment"># 有条件的同学再算一下md5，避免做无用功</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="步骤2-安装sshpass" tabindex="-1"><a class="header-anchor" href="#步骤2-安装sshpass" aria-hidden="true">#</a> 步骤2：安装sshpass</h1><p>sshpass是为了解决在Colab上不能执行交互式ssh命令而安装的，有了这个命令你可以在ssh的时候直接带密码访问。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">!</span>apt-get <span class="token function">install</span> sshpass
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="步骤3-推送文件至目标服务器" tabindex="-1"><a class="header-anchor" href="#步骤3-推送文件至目标服务器" aria-hidden="true">#</a> 步骤3：推送文件至目标服务器</h1><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">!</span>sshpass <span class="token parameter variable">-p</span> targetpassword <span class="token function">scp</span> <span class="token parameter variable">-o</span> <span class="token assign-left variable">StrictHostKeyChecking</span><span class="token operator">=</span>no filename.tar.gz targetuser@targetserver:/targetfolder
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+t+'" alt="image-20220728140751831" loading="lazy"> 运行后会在这个cell一直转圈，可以连上自己的目标服务器查看已经推送到的文件的大小~</p>',15),r=[o];function p(c,d){return s(),e("div",null,r)}const m=a(l,[["render",p],["__file","📀使用GoogleCloab反向推送数据集到有公网IP的服务器.html.vue"]]);export{m as default};
